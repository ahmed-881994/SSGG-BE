openapi: "3.0.2"
info:
  title: SSGG
  version: "1.0"
  description: This is the documentation for the backend APIs for the Sporting Scouts and Girl Guides members management app
  contact:
    email: ssgdts@gmail.com
servers:
  - url: https://api.server.test/v1
tags:
  - name: Members
    description: Everything about members
  - name: Teams
    description: Everything about events
  - name: Events
    description: Everything about events
paths:
  /members/{memberID}:
    get:
      tags:
        - Members
      operationId: getMember
      description: Gets member by ID
      parameters:
        - in: path
          name: memberID
          required: true
          schema:
            type: string
          description: The member ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/member"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Member not found
    patch:
      tags:
        - Members
      operationId: updateMember
      description: Updates a member
      parameters:
        - in: path
          name: memberID
          required: true
          schema:
            type: string
          description: The member ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/member"
      responses:
        "200":
          description: member created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/member"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Member not found
    post:
      tags:
        - Members
      operationId: createMember
      description: Creates a new member
      parameters:
        - in: path
          name: memberID
          required: true
          schema:
            type: string
          description: The member ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/member"
      responses:
        "201":
          description: member created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/member"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
  /members:
    get:
      tags:
        - Members
      operationId: searchMembers
      description: Search members by (Name, Team)
      parameters:
        - in: query
          name: teamID
          required: false
          schema:
            type: integer
          description: The team id
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: The member's name
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/members"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Member not found
  /events/{eventID}:
    get:
      description: "get"
      tags:
        - Events
      parameters:
        - in: path
          name: eventID
          required: true
          schema:
            type: integer
          description: The event ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Event not found
    patch:
      tags:
        - Events
      operationId: updateEvent
      description: Updates an event
      parameters:
        - in: path
          name: eventID
          required: true
          schema:
            type: integer
          description: The event ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/event"
      responses:
        "200":
          description: member created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Event not found
  /events:
    get:
      tags:
        - Events
      operationId: searchEvents
      description: Search events by (Name, Team, Start and End dates)
      parameters:
        - in: query
          name: teamID
          required: false
          schema:
            type: integer
          description: The team id
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: The event name
        - in: query
          name: startDate
          required: false
          schema:
            type: string
          description: The event's start date
        - in: query
          name: endDate
          required: false
          schema:
            type: string
          description: The event's end date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/events"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Event not found
    post:
      tags:
        - Events
      operationId: createEvent
      description: Creates a new event
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/event"
      responses:
        "201":
          description: Event created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/event"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
  /teams/{teamID}/members:
    get:
      tags:
        - Teams
      operationId: getTeamMembers
      description: Get team members by team ID
      parameters:
        - in: path
          name: teamID
          required: true
          schema:
            type: integer
          description: The team ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/team"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Team not found
    post:
      tags:
        - Teams
      operationId: addTeamMembers
      description: Add member to a team
      parameters:
        - in: path
          name: teamID
          required: true
          schema:
            type: integer
          description: The team ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/teamMember"
      responses:
        "200":
          description: Member added
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Team not found
  /teams:
    get:
      tags:
        - Teams
      operationId: searchTeams
      description: Search teams by (LeaderID, StageID)
      parameters:
        - in: query
          name: leaderID
          required: false
          schema:
            type: string
          description: The leader id
        - in: query
          name: stageID
          required: false
          schema:
            type: integer
          description: The stage id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/teams"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Team not found

components:
  schemas:
    member:
      type: object
      properties:
        MemberID:
          type: string
        Name:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        PlaceOfBirth:
          type: string
        DateOfBirth:
          type: string
          format: date
        Address:
          type: string
        NationalIdNo:
          type: integer
        ClubIdNo:
          type: integer
        PassportNo:
          type: string
        DateJoined:
          type: string
          format: date
        MobileNo:
          type: string
        HomeContact:
          type: string
        Email:
          type: string
          format: email
        FacebookURL:
          type: string
          format: uri
        SchoolName:
          type: string
        EducationType:
          type: string
        FatherName:
          type: string
        FatherContact:
          type: string
        FatherJob:
          type: string
        MotherName:
          type: string
        MotherContact:
          type: string
        MotherJob:
          type: string
        GuardianName:
          type: string
        GuardianContact:
          type: string
        GuardianRelationship:
          type: string
        Hobbies:
          type: string
        HealthIssues:
          type: string
        Medications:
          type: string
        QRCodeURL:
          type: string
          format: uri
        ImageURL:
          type: string
          format: uri
        NationalIdURL:
          type: string
          format: uri
        ParentNationalIdURL:
          type: string
          format: uri
        ClubIdURL:
          type: string
          format: uri
        PassportURL:
          type: string
          format: uri
        BirthCertificateURL:
          type: string
          format: uri
        PhotoConsent:
          type: integer
        ConditionsConsent:
          type: integer

    members:
      type: array
      items:
        $ref: "#/components/schemas/member"
    event:
      type: object
      properties:
        EventType:
          type: string
        EventName:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        EventLocation:
          type: string
        EventStartDate:
          type: string
          format: date
        EventEndDate:
          type: string
          format: date
        IsMultiTeam:
          type: boolean
        TeamID:
          type: integer
    events:
      type: array
      items:
        $ref: "#/components/schemas/event"
    team:
      type: object
      properties:
        TeamID:
          type: integer
        TeamName:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        StageName:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        Leaders:
          type: array
          items:
            properties:
              MemberID:
                type: string
              Name:
                type: object
                properties:
                  EN:
                    type: string
                  AR:
                    type: string
        Members:
          type: array
          items:
            properties:
              MemberID:
                type: string
              Name:
                type: object
                properties:
                  EN:
                    type: string
                  AR:
                    type: string
    teamMember:
      type: object
      properties:
        Members:
          type: array
          items:
            properties:
              MemberID:
                type: string
              Name:
                type: object
                properties:
                  EN:
                    type: string
                  AR:
                    type: string
              IsLeader:
                type: boolean
    teams:
      type: array
      items:
        $ref: "#/components/schemas/team"
