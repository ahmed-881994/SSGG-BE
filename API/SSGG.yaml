openapi: 3.0.2
info:
  title: SSGG
  version: "1.0"
  description: This is the documentation for the backend APIs for the Sporting
    Scouts and Girl Guides members management app
  contact:
    email: ssgdtc@gmail.com
servers:
  - url: https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/stg
tags:
  - name: Members
    description: Everything about members
  - name: Teams
    description: Everything about teams
  - name: Events
    description: Everything about events
paths:
  /members:
    get:
      tags:
        - Members
      operationId: searchMembers
      description: Search members by (Name, Team)
      parameters:
        - in: query
          name: teamID
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
          description: The team id
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: The member's name
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/members"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Member not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:read:member
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/member:read:member
    post:
      tags:
        - Members
      operationId: addMember
      description: Adds a new member
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/memberAdd"
      responses:
        "201":
          description: member added
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/member"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:member
    options:
      tags:
        - Members
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /members/{memberID}:
    get:
      tags:
        - Members
      operationId: getMember
      description: Gets member by ID
      parameters:
        - in: path
          name: memberID
          required: true
          schema:
            type: string
          description: The member ID
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/member"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Member not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:read:member
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/member:read:member
    patch:
      tags:
        - Members
      operationId: updateMember
      description: Updates a member
      parameters:
        - in: path
          name: memberID
          required: true
          schema:
            type: string
          description: The member ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/memberUpdate"
      responses:
        "200":
          description: member updated
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/member"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Member not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:member
    options:
      tags:
        - Members
      parameters:
        - name: memberID
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
  /events:
    options:
      tags:
        - Events
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
    get:
      tags:
        - Events
      operationId: searchEvents
      description: Search events by (Name, Team, Start and End dates)
      parameters:
        - in: query
          name: teamID
          required: false
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
          description: The team id
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: The event name
        - in: query
          name: startDate
          required: false
          schema:
            type: string
            format: date
          description: The event's start date
        - in: query
          name: endDate
          required: false
          schema:
            type: string
            format: date
          description: The event's end date
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/events"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Event not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:read:event
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/member:read:event
    post:
      tags:
        - Events
      operationId: createEvent
      description: Creates a new event
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateEvent"
      responses:
        "201":
          description: Event created
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getEvent"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:event
  /events/{eventID}:
    options:
      tags:
        - Events
      parameters:
        - in: path
          name: eventID
          required: true
          schema:
            type: integer
          description: The event ID
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
    get:
      operationId: getEvent
      description: Gets event by ID
      tags:
        - Events
      parameters:
        - in: path
          name: eventID
          required: true
          schema:
            type: integer
          description: The event ID
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getEvent"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Event not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:read:event
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/member:read:event
    patch:
      tags:
        - Events
      operationId: updateEvent
      description: Updates an event
      parameters:
        - in: path
          name: eventID
          required: true
          schema:
            type: integer
          description: The event ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateEvent"
      responses:
        "200":
          description: event updated
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Event not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:event
  /events/{eventID}/attendance:
    options:
      tags:
        - Events
      parameters:
        - in: path
          name: eventID
          required: true
          schema:
            type: integer
          description: The event ID
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
    post:
      tags:
        - Events
      operationId: takeAttendance
      description: Records members attendance in an event
      parameters:
        - in: path
          name: eventID
          required: true
          schema:
            type: integer
          description: The event ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/takeEventAttendance"
      responses:
        "200":
          description: attendance taken
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Event not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:event
    patch:
      tags:
        - Events
      operationId: updateAttendance
      description: Updates members attendance in an event
      parameters:
        - in: path
          name: eventID
          required: true
          schema:
            type: integer
          description: The event ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/takeEventAttendance"
      responses:
        "200":
          description: attendance updated
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Event not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:event
    get:
      tags:
        - Events
      operationId: getEventAttendance
      description: Gets the attendance list of an event
      parameters:
        - in: path
          name: eventID
          required: true
          schema:
            type: integer
          description: The event ID
      responses:
        "200":
          description: Success
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getEventAttendance"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Event or Member not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:read:event
  /teams:
    options:
      tags:
        - Teams
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
    get:
      tags:
        - Teams
      operationId: searchTeams
      description: Search teams by (LeaderID, StageID)
      parameters:
        - in: query
          name: leaderID
          required: false
          schema:
            type: string
          description: The leader id
        - in: query
          name: stageID
          required: false
          schema:
            type: integer
          description: The stage id
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/teams"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Team not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:read:team
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:team
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/member:read:team
  /teams/{teamID}/members:
    options:
      tags:
        - Teams
      parameters:
        - in: path
          name: teamID
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
          description: The team ID
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
    get:
      tags:
        - Teams
      operationId: getTeamMembers
      description: Get team members by team ID
      parameters:
        - in: path
          name: teamID
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
          description: The team ID
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/team"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Team not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:read:team
    post:
      tags:
        - Teams
      operationId: addTeamMembers
      description: Add member to a team
      parameters:
        - in: path
          name: teamID
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
          description: The team ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/teamMemberAdd"
      responses:
        "200":
          description: Member added
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Team not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:team
  /teams/transfer:
    options:
      tags:
        - Teams
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
    post:
      tags:
        - Teams
      operationId: transferTeam
      description: Transfer member between teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/teamMemberTransfer"
      responses:
        "200":
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Team not found
        "500":
          description: Internal Server Error
      security:
        - cognito:
            - https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:team
components:
  securitySchemes:
    cognito:
      type: oauth2
      x-tokenName: id_token
      flows:
        authorizationCode:
          authorizationUrl: https://ssgg-dev.auth.eu-north-1.amazoncognito.com/oauth2/authorize
          tokenUrl: https://ssgg-dev.auth.eu-north-1.amazoncognito.com/oauth2/token
          refreshUrl: https://ssgg-dev.auth.eu-north-1.amazoncognito.com/oauth2/token
          scopes:
            https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:read:member: Reads all details about a member
            https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:member: updates all details about a member
            https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:read:team: Reads all details about a team
            https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:team: updates all details about a team
            https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:read:event: Reads all details about an event
            https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/leader:write:event: updates all details about an event
            https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/member:read:member: Reads public details about a member
            https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/member:read:team: Reads public details about a team
            https://bqxf5y910f.execute-api.eu-north-1.amazonaws.com/member:read:event: Reads public details about an event
  schemas:
    member:
      type: object
      properties:
        MemberID:
          type: string
        Name:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        Teams:
          type: array
          items:
            properties:
              TeamID:
                type: integer
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
              TeamName:
                type: object
                properties:
                  EN:
                    type: string
                  AR:
                    type: string
        PlaceOfBirth:
          type: string
        DateOfBirth:
          type: string
          format: date
        Address:
          type: string
        NationalIdNo:
          type: string
        ClubIdNo:
          type: string
        PassportNo:
          type: string
        DateJoined:
          type: string
          format: date
        MobileNo:
          type: string
        HomeContact:
          type: string
        Email:
          type: string
          format: email
        FacebookURL:
          type: string
          format: uri
        SchoolName:
          type: string
        EducationType:
          type: string
        FatherName:
          type: string
        FatherContact:
          type: string
        FatherJob:
          type: string
        MotherName:
          type: string
        MotherContact:
          type: string
        MotherJob:
          type: string
        GuardianName:
          type: string
        GuardianContact:
          type: string
        GuardianRelationship:
          type: string
        Hobbies:
          type: string
        HealthIssues:
          type: string
        Medications:
          type: string
        QRCodeURL:
          type: string
          format: uri
        ImageURL:
          type: string
          format: uri
        NationalIdURL:
          type: string
          format: uri
        ParentNationalIdURL:
          type: string
          format: uri
        ClubIdURL:
          type: string
          format: uri
        PassportURL:
          type: string
          format: uri
        BirthCertificateURL:
          type: string
          format: uri
        PhotoConsent:
          type: integer
        ConditionsConsent:
          type: integer
    memberAdd:
      type: object
      properties:
        MemberID:
          type: string
        Name:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        PlaceOfBirth:
          type: string
        DateOfBirth:
          type: string
          format: date
        Address:
          type: string
        NationalIdNo:
          type: string
        ClubIdNo:
          type: string
        PassportNo:
          type: string
        DateJoined:
          type: string
          format: date
        MobileNo:
          type: string
        HomeContact:
          type: string
        Email:
          type: string
          format: email
        FacebookURL:
          type: string
          format: uri
        SchoolName:
          type: string
        EducationType:
          type: string
        FatherName:
          type: string
        FatherContact:
          type: string
        FatherJob:
          type: string
        MotherName:
          type: string
        MotherContact:
          type: string
        MotherJob:
          type: string
        GuardianName:
          type: string
        GuardianContact:
          type: string
        GuardianRelationship:
          type: string
        Hobbies:
          type: string
        HealthIssues:
          type: string
        Medications:
          type: string
        QRCodeURL:
          type: string
          format: uri
        ImageURL:
          type: string
          format: uri
        NationalIdURL:
          type: string
          format: uri
        ParentNationalIdURL:
          type: string
          format: uri
        ClubIdURL:
          type: string
          format: uri
        PassportURL:
          type: string
          format: uri
        BirthCertificateURL:
          type: string
          format: uri
        PhotoConsent:
          type: integer
        ConditionsConsent:
          type: integer
    memberUpdate:
      type: object
      properties:
        Name:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        PlaceOfBirth:
          type: string
        DateOfBirth:
          type: string
          format: date
        Address:
          type: string
        NationalIdNo:
          type: string
        ClubIdNo:
          type: string
        PassportNo:
          type: string
        DateJoined:
          type: string
          format: date
        MobileNo:
          type: string
        HomeContact:
          type: string
        Email:
          type: string
          format: email
        FacebookURL:
          type: string
          format: uri
        SchoolName:
          type: string
        EducationType:
          type: string
        FatherName:
          type: string
        FatherContact:
          type: string
        FatherJob:
          type: string
        MotherName:
          type: string
        MotherContact:
          type: string
        MotherJob:
          type: string
        GuardianName:
          type: string
        GuardianContact:
          type: string
        GuardianRelationship:
          type: string
        Hobbies:
          type: string
        HealthIssues:
          type: string
        Medications:
          type: string
        QRCodeURL:
          type: string
          format: uri
        ImageURL:
          type: string
          format: uri
        NationalIdURL:
          type: string
          format: uri
        ParentNationalIdURL:
          type: string
          format: uri
        ClubIdURL:
          type: string
          format: uri
        PassportURL:
          type: string
          format: uri
        BirthCertificateURL:
          type: string
          format: uri
        PhotoConsent:
          type: integer
        ConditionsConsent:
          type: integer
    members:
      type: array
      items:
        $ref: "#/components/schemas/member"
    updateEvent:
      type: object
      properties:
        EventTypeID:
          type: integer
        EventName:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        EventLocation:
          type: string
        EventStartDate:
          type: string
          format: date
        EventEndDate:
          type: string
          format: date
        IsMultiTeam:
          type: boolean
        TeamID:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
    getEvent:
      type: object
      properties:
        EventID:
          type: integer
        EventTypeID:
          type: integer
        Name:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        Location:
          type: string
        StartDate:
          type: string
          format: date
        EndDate:
          type: string
          format: date
        IsMultiTeam:
          type: boolean
        TeamID:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
    events:
      type: array
      items:
        $ref: "#/components/schemas/getEvent"
    team:
      type: object
      properties:
        TeamID:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
        TeamName:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        StageID:
          type: integer
        StageName:
          type: object
          properties:
            EN:
              type: string
            AR:
              type: string
        Leaders:
          type: array
          items:
            properties:
              MemberID:
                type: string
              Name:
                type: object
                properties:
                  EN:
                    type: string
                  AR:
                    type: string
        Members:
          type: array
          items:
            properties:
              MemberID:
                type: string
              Name:
                type: object
                properties:
                  EN:
                    type: string
                  AR:
                    type: string
    teamMemberAdd:
      type: object
      properties:
        MemberID:
          type: string
        IsLeader:
          type: boolean
        FromDate:
          type: string
          format: date
    teams:
      type: array
      items:
        $ref: "#/components/schemas/team"
    teamMemberTransfer:
      type: object
      properties:
        FromTeamID:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
        ToTeamID:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
        TransferDate:
          type: string
          format: date
        Member:
          type: object
          properties:
            MemberID:
              type: string
            IsLeader:
              type: integer
    takeEventAttendance:
      type: object
      properties:
        Attendance:
          type: array
          items:
            properties:
              MemberID:
                type: string
              AttendanceStateID:
                type: integer
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
    getEventAttendance:
      type: object
      properties:
        EventID:
          type: integer
        Attendance:
          type: array
          items:
            properties:
              MemberID:
                type: string
              AttendanceStateID:
                type: integer
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
